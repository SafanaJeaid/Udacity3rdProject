# ---
# - name: "Creates backend app directory"
#   file:
#       path: ~/backend-app
#       state: directory

# - name: "Copy compiled backend app"
#   copy:
#       src: dist.zip
#       dest: "~/backend-app/dist.zip"

# - name: "Unzip backend files"
#   shell: |
#       cd ~/backend-app
#       unzip dist.zip
#       rm -rf dist.zip
# # - name: "Install dependencies for project"
# #   shell: |
# #       cd ~/backend-app
# #       install npm
# - name: "Executing node"
#   shell: |
#       export
#       cd ~/backend-app
#       pm2 start main.js --update-env
#   register: execute_node

# - name: print message
#   debug:
#       msg: "{{ execute_node.stdout_lines }}"

# - name: "Configure pm2 to start as service"
#   become: true
#   shell: |
#       env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu

# ---
# - name: Copy backend compiled files web server
#   copy:
#     src: backend.zip
#     dest: /home/ubuntu

# - name: Unzip backend files
#   shell: |
#     unzip /home/ubuntu/backend.zip
# - name: Install Node
#   shell: |
#     cd /home/ubuntu/backend
#     npm install
# - name: Build Node
#   shell: |
#     cd /home/ubuntu/backend
#     npm run build
# - name: Start backend with pm2
#   shell: |
#     cd /home/ubuntu/backend
#     pm2 start npm --name backend -- start
# - name: save your list of processes
#   shell: |
#     cd /home/ubuntu/backend
#     pm2 save

# ---
# - name: "upgrade packages"
#   become: true
#   apt:
#     upgrade: "yes"

# - name: "install dependencies"
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     state: latest
#     update_cache: yes

# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present

# - name: Creates directory
#   file:
#     path: /home/ubuntu/backend
#     state: directory

# - name: Unarchives the compressed artifact file
#   unarchive:
#     src: artifact.tar.gz
#     dest: /home/ubuntu/backend

# - name: Install dependencies
#   command: npm install
#   args:
#     chdir: /home/ubuntu/backend
  
# # - name: Use pm2 to run backend
# #   command: pm2 start dist/main.js --name "backend" -i max
# #   args:
# #     chdir: /home/ubuntu/backend

# - name: "start PM2"
#   become_user: ubuntu
#   become: yes
#   shell: |
#     cd ~/app/backend
#     npm i
#     pm2 start npm --name backend -- start


#TRYING NEW SCRIPT!!!

# ---
# - name: "upgrade packages."
#   become: true
#   apt:
#     upgrade: "yes"

# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     update_cache: yes


# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present


# - name: create backend directory
#   become: yes
#   file:
#     path: /root/backend
#     state: directory
#     mode: 0755

# - name: copy backend files
#   become: yes
#   copy:
#     src: /root/project/artifact.tar.gz
#     dest: /root/backend

# - name: unpack backend files
#   become: yes
#   shell: |
#     cd ~/backend
#     tar -vxf artifact.tar.gz
#     rm -f artifact.tar.gz
# - name: start app
#   become: yes
#   shell: |
#     cd ~/backend
#     npm install
#     pm2 stop default
#     pm2 start npm -- run start
#     cd dist
#     pm2 start main.js --update-env

#     # Mahmoud

---
- name: "Creates backend app directory"
  file:
    path: /home/ubuntu/backend
    state: directory

- name: "Unarchive backend files"
  unarchive:
    src: artifact.tar.gz
    dest: /home/ubuntu/backend

- name: "upgrade packages."
  become: true
  apt:
    upgrade: "yes"

# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     update_cache: yes

- name: Install dependencies
  command: npm install
  args:
    chdir: /home/ubuntu/backend

- name: "install pm2"
  become: true
  npm:
    name: pm2
    global: yes
    production: yes
    state: present

# - name: "Installing Node Dependencies"
#   shell: |
#     cd ~/backend-app
#     npm install

- name: "Executing Node app with PM2"
  shell: |
    cd /home/ubuntu/backend/dist
    pm2 stop default
    pm2 start main.js
  register: execute_node

- name: print message
  debug:
    msg: "{{ execute_node.stdout_lines }}"

- name: "Configure pm2 to start as service"
  become: true
  shell: |
    env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu

# DESPRATE

# ---
# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     state: latest
#     update_cache: yes

# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present

# - name: create backend directory
#   file:
#     path: /home/ubuntu/backend
#     state: directory

# - name: copy backend dist files
#   ansible.builtin.unarchive:
#     src: artifact.tar.gz
#     dest: /home/ubuntu/backend

# - name: unpack backend
#   shell: |
#     cd /home/ubuntu/
#     tar xvzf artifact.tar.gz -C .
#     ls -la

# - name: Install dependencies
#   command: npm install
#   args:
#     chdir: /home/ubuntu/backend
# # - name: install node
# #   shell: |
# #     cd /home/ubuntu/backend
# #     npm install
# #     npm install --only=dev
# - name: Build package
#   shell: |
#     cd /home/ubuntu/backend
#     npm run build
#     cat .env
#     npm run prestart:prod
# - name: start backend app
#   shell: |
#     cd /home/ubuntu/backend
#     pm2 stop default
#     pm2 start npm --name backend -- start
# - name: start main.js
#   become: no
#   shell: pm2 start main.js
#   args:
#     chdir: /home/ubuntu/backend/dist